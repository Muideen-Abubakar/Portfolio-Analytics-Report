Allocation_2$CurrentPrice <- CurrentPrice$Last
CurrentPrice
#Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
#label_comma()(Portfolio_Size)
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
Portfolio_Size
#label_comma()(Portfolio_Size)
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
label_comma()(Portfolio_Size)
# d. Alpha return, using the S&P 500 as benchmark
#Get the S&P Index level as at params$TradeDate
GSPC <- getSymbols("^GSPC", from = params$TradeDate, to = as.Date(params$TradeDate)+1, warnings = FALSE, auto.assign = FALSE)
SP500_1 <- head(GSPC)
SP500_1 <- SP500_1$GSPC.Adjusted
SP500_1 <- as.numeric(SP500_1)
SP500_Current <- getQuote("^GSPC", what=yahooQF("Last Trade (Price Only)"))
# d. Alpha return, using the S&P 500 as benchmark
#Get the S&P Index level as at params$TradeDate
GSPC <- getSymbols("^GSPC", from = params$TradeDate, to = as.Date(params$TradeDate)+1, warnings = FALSE, auto.assign = FALSE)
SP500_1 <- head(GSPC)
SP500_1 <- SP500_1$GSPC.Adjusted
SP500_1 <- as.numeric(SP500_1)
SP500_Current <- getQuote("^GSPC", what=yahooQF("Last Trade (Price Only)"))
SP500_Current <- SP500_Current$Last
Rb <- as.numeric(((SP500_Current/SP500_1)-1)*100)
Alpha = ReturnToDate - Rb
round(Alpha, 2)
#Risk-free rate (US 10-yr Treasury)
#Get the risk-free rate (US 10-yr Treasury yield) from Yahoo Finance
Rf <- getQuote("^TNX", what=yahooQF("Last Trade (Price Only)"))
Rf <- Rf$Last
TopTenHoldingsPie <- pie3D(TopTenHoldings$Weight, border = "white", labels = TopTenHoldings$Symbol, labelcex = 0.75, explode = 0.15, shade = 0.3)
TopTenHoldingsPie
TopTenHoldingsPie <- pie3D(TopTenHoldings$Weight, border = "white", labels = TopTenHoldings$Symbol, labelcex = 0.75, explode = 0.15, shade = 0.3)
#TopTenHoldingsPie
stocks <- tq_get(c("AAPL", "MSFT"), from = "2017-01-01")
stocks %>%
dplyr::select(symbol, date, adjusted) %>%
tidyr::spread(key = symbol, value = adjusted) %>%
timetk::tk_xts() %>%
dygraph() %>%
dyRebase(value = 100) %>%
dyRangeSelector()
par(bg = "black")
stocks <- tq_get(c("AAPL", "MSFT"), from = "2017-01-01")
stocks %>%
dplyr::select(symbol, date, adjusted) %>%
tidyr::spread(key = symbol, value = adjusted) %>%
timetk::tk_xts() %>%
dygraph() %>%
dyRebase(value = 100) %>%
dyRangeSelector()
par(bg = "black")
knit_with_parameters("~/BigData_in_Q.fin/Coursework/Coursework1/MuideenAbubakar/3.CourseworkThree/Static/App_v2.Rmd")
knit_with_parameters("~/BigData_in_Q.fin/Coursework/Coursework1/MuideenAbubakar/3.CourseworkThree/Static/App_v2.Rmd")
knit_with_parameters("~/BigData_in_Q.fin/Coursework/Coursework1/MuideenAbubakar/3.CourseworkThree/Static/App_v2.Rmd")
knit_with_parameters("~/BigData_in_Q.fin/Coursework/Coursework1/MuideenAbubakar/3.CourseworkThree/Static/App_v2.Rmd")
knit_with_parameters("~/BigData_in_Q.fin/Coursework/Coursework1/MuideenAbubakar/3.CourseworkThree/Static/App_v2.Rmd")
knit_with_parameters("~/BigData_in_Q.fin/Coursework/Coursework1/MuideenAbubakar/3.CourseworkThree/Static/App_v2.Rmd")
# d. Alpha return, using the S&P 500 as benchmark
#Get the S&P Index level as at params$TradeDate
GSPC <- getSymbols("^GSPC", from = params$TradeDate, to = as.Date(params$TradeDate)+1, warnings = FALSE, auto.assign = FALSE)
SP500_1 <- head(GSPC)
SP500_1 <- SP500_1$GSPC.Adjusted
SP500_1 <- as.numeric(SP500_1)
SP500_Current <- getQuote("^GSPC", what=yahooQF("Last Trade (Price Only)"))
SP500_Current <- SP500_Current$Last
Rb <- as.numeric(((SP500_Current/SP500_1)-1)*100)
Alpha = ReturnToDate - Rb
round(Alpha, 2)
#Risk-free rate (US 10-yr Treasury)
#Get the risk-free rate (US 10-yr Treasury yield) from Yahoo Finance
Rf <- getQuote("^TNX", what=yahooQF("Last Trade (Price Only)"))
Rf <- Rf$Last
# d. Alpha return, using the S&P 500 as benchmark
#Get the S&P Index level as at params$TradeDate
GSPC <- getSymbols("^GSPC", from = params$TradeDate, to = as.Date(params$TradeDate)+1, warnings = FALSE, auto.assign = FALSE)
SP500_1 <- head(GSPC)
SP500_1 <- SP500_1$GSPC.Adjusted
SP500_1 <- as.numeric(SP500_1)
SP500_Current <- getQuote("^GSPC", what=yahooQF("Last Trade (Price Only)"))
SP500_Current <- SP500_Current$Last
Rb <- as.numeric(((SP500_Current/SP500_1)-1)*100)
Alpha = ReturnToDate - Rb
round(Alpha, 2)
#Risk-free rate (US 10-yr Treasury)
#Get the risk-free rate (US 10-yr Treasury yield) from Yahoo Finance
Rf <- getQuote("^TNX", what=yahooQF("Last Trade (Price Only)"))
Rf <- Rf$Last
knit_with_parameters("~/BigData_in_Q.fin/Coursework/Coursework1/MuideenAbubakar/3.CourseworkThree/Static/App_v2.Rmd")
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
label_comma()(Portfolio_Size)
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
#Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
#label_comma()(Portfolio_Size)
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
CurrentPrice
#Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
#label_comma()(Portfolio_Size)
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
CurrentPrice
#Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
#label_comma()(Portfolio_Size)
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
CurrentPrice
Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
label_comma()(Portfolio_Size)
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
CurrentPrice
#Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
$label_comma()(Portfolio_Size)
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
CurrentPrice
#Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
#label_comma()(Portfolio_Size)
#Allocation[, c("Symbol", "Quantity", "Notional", "TradeType", "Ccy", "Counterparty")]
#Remodify the Allocation table by reducing it to the most relevant columns
RelevantCols <- c("Symbol", "Notional", "Quantity")
Allocation_1 <- Allocation[RelevantCols]
Allocation_1 <- arrange(Allocation_1, Symbol) #sort the Symbols alphabetically
#Aggregates the Notional and Quantity based on Symbol
Allocation_2 <- aggregate(. ~ Symbol, data = Allocation_1, FUN = sum)
Allocation_2
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
Allocation_2
#Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
#label_comma()(Portfolio_Size)
#Allocation[, c("Symbol", "Quantity", "Notional", "TradeType", "Ccy", "Counterparty")]
#Remodify the Allocation table by reducing it to the most relevant columns
RelevantCols <- c("Symbol", "Notional", "Quantity")
Allocation_1 <- Allocation[RelevantCols]
Allocation_1 <- arrange(Allocation_1, Symbol) #sort the Symbols alphabetically
#Aggregates the Notional and Quantity based on Symbol
Allocation_2 <- aggregate(. ~ Symbol, data = Allocation_1, FUN = sum)
Allocation_2
#Trade Allocations
Database <- conMongo$find()
SelectedTraderPositions <- Database[Database$Trader == params$TraderID, ]
Allocation <- SelectedTraderPositions[grep(params$TradeDate, SelectedTraderPositions$DateTime), ]
Allocation
#Allocation <- conMongo$find(query = '{"DateTime": {"$gte": "ISODate(2021-11-12T00:00:00.000Z)"}, "Trader": {"$eq": "DGR1983"}}')
#Allocation[, c("Symbol", "Quantity", "Notional", "TradeType", "Ccy", "Counterparty")]
#Remodify the Allocation table by reducing it to the most relevant columns
RelevantCols <- c("Symbol", "Notional", "Quantity")
Allocation_1 <- Allocation[RelevantCols]
Allocation_1 <- arrange(Allocation_1, Symbol) #sort the Symbols alphabetically
Allocation_1
#Aggregates the Notional and Quantity based on Symbol
Allocation_2 <- aggregate(. ~ Symbol, data = Allocation_1, FUN = sum)
Allocation_2
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
Allocation_2
#Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
#label_comma()(Portfolio_Size)
#Trade Allocations
Database <- conMongo$find()
SelectedTraderPositions <- Database[Database$Trader == params$TraderID, ]
Allocation <- SelectedTraderPositions[grep(params$TradeDate, SelectedTraderPositions$DateTime), ]
Allocation
#Allocation <- conMongo$find(query = '{"DateTime": {"$gte": "ISODate(2021-11-12T00:00:00.000Z)"}, "Trader": {"$eq": "DGR1983"}}')
#Allocation[, c("Symbol", "Quantity", "Notional", "TradeType", "Ccy", "Counterparty")]
#Remodify the Allocation table by reducing it to the most relevant columns
RelevantCols <- c("Symbol", "Notional", "Quantity")
Allocation_1 <- Allocation[RelevantCols]
Allocation_1 <- arrange(Allocation_1, Symbol) #sort the Symbols alphabetically
Allocation_1
#Aggregates the Notional and Quantity based on Symbol
Allocation_2 <- aggregate(. ~ Symbol, data = Allocation_1, FUN = sum)
Allocation_2
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
Allocation_2
#Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
#label_comma()(Portfolio_Size)
#Allocation[, c("Symbol", "Quantity", "Notional", "TradeType", "Ccy", "Counterparty")]
#Remodify the Allocation table by reducing it to the most relevant columns
RelevantCols <- c("Symbol", "Notional", "Quantity")
Allocation_1 <- Allocation[RelevantCols]
Allocation_1 <- arrange(Allocation_1, Symbol) #sort the Symbols alphabetically
#Allocation_1
#Aggregates the Notional and Quantity based on Symbol
Allocation_2 <- aggregate(. ~ Symbol, data = Allocation_1, FUN = sum)
Allocation_2
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
for (symbol in Allocation_2$Symbol) {
if (symbol == "BRK.B")
Allocation_2$Symbol = "BRK-B"
}
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
#Allocation_2
Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
label_comma()(Portfolio_Size)
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
for (symbol in Allocation_2$Symbol) {
if (symbol == "BRK.B")
Allocation_2$Symbol = "BRK-B"
}
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
Allocation_2
Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
label_comma()(Portfolio_Size)
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
for (symbol in Allocation_2$Symbol) {
if (symbol == "BRK.B")
Allocation_2$Symbol[Allocation_2$Symbol == "BRK.B"] <- "BRK-B"
}
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
Allocation_2
Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
label_comma()(Portfolio_Size)
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
#for (symbol in Allocation_2$Symbol) {
if (Allocation$Symbol == "BRK.B") {
Allocation_2$Symbol[Allocation_2$Symbol == "BRK.B"] <- "BRK-B"
}
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
Allocation_2
Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
label_comma()(Portfolio_Size)
#Allocation[, c("Symbol", "Quantity", "Notional", "TradeType", "Ccy", "Counterparty")]
#Remodify the Allocation table by reducing it to the most relevant columns
RelevantCols <- c("Symbol", "Notional", "Quantity")
Allocation_1 <- Allocation[RelevantCols]
Allocation_1 <- arrange(Allocation_1, Symbol) #sort the Symbols alphabetically
#Allocation_1
#Aggregates the Notional and Quantity based on Symbol
Allocation_2 <- aggregate(. ~ Symbol, data = Allocation_1, FUN = sum)
Allocation_2
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
#for (symbol in Allocation_2$Symbol) {
if (Allocation_2$Symbol[Allocation$Symbol == "BRK.B"]) {
Allocation_2$Symbol[Allocation_2$Symbol == "BRK-B"]
}
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
#for (symbol in Allocation_2$Symbol) {
if (Allocation_2$Symbol[Allocation$Symbol == "BRK.B"]) {
Allocation_2$Symbol <- "BRK-B"
}
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
#for (symbol in Allocation_2$Symbol) {
if (Allocation_2$Symbol[Allocation$Symbol == "BRK.B"]) {
Allocation_2$Symbol["BRK.B", ] <- "BRK-B"
}
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
for (symbol in Allocation_2$Symbol) {
if (Allocation_2$Symbol[Allocation$Symbol == "BRK.B"])
symbol <- "BRK-B"
}
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
for (symbol in Allocation_2$Symbol) {
if (Allocation_2$Symbol[Allocation$Symbol == "BRK.B"])
symbol = "BRK-B"
}
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
for (symbol in Allocation_2$Symbol) {
if (symbol == "BRK.B")
Allocation_2$Symbol[Allocation$Symbol == "BRK.B"] <- "BRK-B"
}
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
for (symbol in Allocation_2$Symbol) {
if (symbol == "BRK.B")
Allocation_2$Symbol[Allocation$Symbol == "BRK.B"] <- "BRK-B"
}
#Allocation[, c("Symbol", "Quantity", "Notional", "TradeType", "Ccy", "Counterparty")]
#Remodify the Allocation table by reducing it to the most relevant columns
RelevantCols <- c("Symbol", "Notional", "Quantity")
Allocation_1 <- Allocation[RelevantCols]
Allocation_1 <- arrange(Allocation_1, Symbol) #sort the Symbols alphabetically
#Allocation_1
#Aggregates the Notional and Quantity based on Symbol
Allocation_2 <- aggregate(. ~ Symbol, data = Allocation_1, FUN = sum)
Allocation_2
#Allocation[, c("Symbol", "Quantity", "Notional", "TradeType", "Ccy", "Counterparty")]
#Remodify the Allocation table by reducing it to the most relevant columns
RelevantCols <- c("Symbol", "Notional", "Quantity")
Allocation_1 <- Allocation[RelevantCols]
Allocation_1 <- arrange(Allocation_1, Symbol) #sort the Symbols alphabetically
#Allocation_1
#Aggregates the Notional and Quantity based on Symbol
Allocation_2 <- aggregate(. ~ Symbol, data = Allocation_1, FUN = sum)
Allocation_2
Allocation_2$Symbol
#Allocation[, c("Symbol", "Quantity", "Notional", "TradeType", "Ccy", "Counterparty")]
#Remodify the Allocation table by reducing it to the most relevant columns
RelevantCols <- c("Symbol", "Notional", "Quantity")
Allocation_1 <- Allocation[RelevantCols]
Allocation_1 <- arrange(Allocation_1, Symbol) #sort the Symbols alphabetically
#Allocation_1
#Aggregates the Notional and Quantity based on Symbol
Allocation_2 <- aggregate(. ~ Symbol, data = Allocation_1, FUN = sum)
Allocation_2
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
for (symbol in Allocation_2$Symbol) {
if (symbol == "BRK.B")
Allocation_2$Symbol[Allocation$Symbol == "BRK.B"] <- "BRK-B"
}
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
for (symbol in Allocation_2$Symbol) {
if (symbol == "BRK.B")
symbol = "BRK-B"
}
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
Allocation_2
Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
label_comma()(Portfolio_Size)
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
for (symbol in Allocation_2$Symbol) {
if (symbol == "BRK.B")
Allocation_2$Symbol["BRK.B"] = "BRK-B"
}
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
for (symbol in Allocation_2$Symbol) {
if (Allocation$Symbol == "BRK.B")
Allocation_2$Symbol["BRK.B"] = "BRK-B"
}
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
Allocation_2
Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
label_comma()(Portfolio_Size)
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
for (symbol in 1:nrow(Allocation_2$Symbol)) {
if (Allocation_2[symbol, "Symbol"] == "BRK.B") {
Allocation_2[symbol, "Symbol"] <- "BRK-B"
}
}
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
for (symbol in (Allocation_2$Symbol)) {
if (Allocation_2[symbol, "Symbol"] == "BRK.B") {
Allocation_2[symbol, "Symbol"] <- "BRK-B"
}
}
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
for (symbol in (Allocation_2$Symbol)) {
if (Allocation_2[symbol, "Symbol"] == "BRK.B") {
Allocation_2[symbol, ] <- "BRK-B"
}
}
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
for (symbol in 1:nrow(Allocation_2$Symbol)) {
if (Allocation_2$Symbol[symbol] == "BRK.B") {
Allocation_2$Symbol = "BRK-B"
}
}
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
for (symbol in Allocation_2$Symbol) {
if (Allocation_2$Symbol[symbol] == "BRK.B") {
Allocation_2$Symbol = "BRK-B"
}
}
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
#Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
for (symbol in 1:ncol(Allocation_2$Symbol)) {
if (Allocation_2$Symbol[symbol] == "BRK.B") {
Allocation_2$Symbol = "BRK-B"
}
}
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
#for (symbol in 1:ncol(Allocation_2$Symbol)) {
#if (Allocation_2$Symbol[symbol] == "BRK.B") {
# Allocation_2$Symbol = "BRK-B"
#}
#}
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
Allocation_2
Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
label_comma()(Portfolio_Size)
#Compute the total portfolio size (based on current prices) and weight of each stock
#Get latest price data from Yahoo Finance
Allocation_2$Symbol[Allocation_2$Symbol == "SYMC"] <- "SYMC.VI" #Change SYMC  to SYMC.VI as quoted on Yahoo Finance
Allocation_2$Symbol[Allocation_2$Symbol == "BRK.B"] <- "BRK-B"
#for (symbol in 1:ncol(Allocation_2$Symbol)) {
#if (Allocation_2$Symbol[symbol] == "BRK.B") {
# Allocation_2$Symbol = "BRK-B"
#}
#}
CurrentPrice <- getQuote(Allocation_2$Symbol, what=yahooQF("Last Trade (Price Only)"))
Allocation_2$CurrentPrice <- CurrentPrice$Last
Allocation_2
Portfolio_Size <- sum(Allocation_2$Quantity * Allocation_2$CurrentPrice)
label_comma()(Portfolio_Size)
# d. Alpha return, using the S&P 500 as benchmark
#Get the S&P Index level as at params$TradeDate
GSPC <- getSymbols("^GSPC", from = params$TradeDate, to = as.Date(params$TradeDate)+1, warnings = FALSE, auto.assign = FALSE)
SP500_1 <- head(GSPC)
SP500_1 <- SP500_1$GSPC.Adjusted
SP500_1 <- as.numeric(SP500_1)
SP500_Current <- getQuote("^GSPC", what=yahooQF("Last Trade (Price Only)"))
SP500_Current <- SP500_Current$Last
Rb <- as.numeric(((SP500_Current/SP500_1)-1)*100)
Alpha = ReturnToDate - Rb
round(Alpha, 2)
#Risk-free rate (US 10-yr Treasury)
#Get the risk-free rate (US 10-yr Treasury yield) from Yahoo Finance
Rf <- getQuote("^TNX", what=yahooQF("Last Trade (Price Only)"))
Rf <- Rf$Last
stocks <- tq_get(c("AAPL", "MSFT"), from = "2017-01-01")
rr <- stocks %>%
dplyr::select(symbol, date, adjusted) %>%
tidyr::spread(key = symbol, value = adjusted) %>%
timetk::tk_xts() %>%
dygraph() %>%
dyRebase(value = 100) %>%
dyRangeSelector()
rr
